/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.openbravo.pos.sales.shared;

import com.openbravo.basic.BasicException;
import com.openbravo.data.gui.MessageInf;
import com.openbravo.data.user.ListProvider;
import com.openbravo.data.user.ListProviderCreator;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.sales.DataLogicReceipts;
import com.openbravo.pos.sales.SharedTicketInfo;
import com.openbravo.pos.ticket.TicketInfo;
import com.openbravo.pos.ticket.TicketLineInfo;
import com.openbravo.pos.customers.CustomerInfo;
import com.openbravo.pos.customers.CustomerInfoExt;
import com.openbravo.pos.customers.DataLogicCustomers;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Insets;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;

/**
 *
 * @author Cory
 */
public class JTicketsBagMergeList extends javax.swing.JDialog {

    private String m_sDialogTicket;
    private String m_sPrimaryTicket;
    private String m_sSecondaryTicket;
    private List<SharedTicketInfo> ticketList;
    private List<CustomerInfo> customerList;
    private DataLogicReceipts dlReceipts;
    /**
     * Creates new form JTicketsBagMerge
     */
    
    private JTicketsBagMergeList(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    /** Creates new form JTicketsBagSharedList */
    private JTicketsBagMergeList(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public JTicketsBagMergeList() {
        initComponents();
        
        m_jButtonCancel1.setText("Merge");
        this.setPreferredSize(new Dimension(400, 300));
    }
    
    public String showTicketsList(DataLogicReceipts dlReceipts, java.util.List<SharedTicketInfo> atickets, java.util.List<CustomerInfo> customers) {
        this.dlReceipts = dlReceipts;
        this.ticketList = atickets;
        this.customerList = customers;
        
        for (SharedTicketInfo aticket : atickets) {
            m_jtickets.add(new JTicketsBagMergeList.JButtonTicket(aticket));
        }  
       
        m_sPrimaryTicket = null;
        m_sSecondaryTicket = null;
        m_sDialogTicket = null;

        setVisible(true);
       
        return m_sDialogTicket;
    }
    
    public void updateTicketsList() {
        java.util.List<SharedTicketInfo> results = new java.util.ArrayList<SharedTicketInfo>();
        String query = jTextField1.getText();

        for(SharedTicketInfo aticket : this.ticketList) {
            CustomerInfo ci = getCustomer(this.customerList, aticket.customerName());
            
            if(ci != null) {
                if(aticket.getCustomerName().startsWith(query) || ci.getSearchkey().startsWith(query))
                    results.add(aticket);
            }
        }

        m_jtickets.removeAll();

        for(SharedTicketInfo aticket : results) {
            m_jtickets.add(new JButtonTicket(aticket));
        }
        
        m_jtickets.updateUI();
    }
    
    public CustomerInfo getCustomer(List<CustomerInfo> customers, String name) {
        for(CustomerInfo ci : customers) {
            if(ci.getName().equals(name))
                return ci;
        }
        return null;
    }
    
    public static JTicketsBagMergeList newJDialog(JTicketsBagShared ticketsbagshared) {
        
        Window window = getWindow(ticketsbagshared);
        JTicketsBagMergeList mydialog;
        if (window instanceof Frame) { 
            mydialog = new JTicketsBagMergeList((Frame) window, true);
        } else {
            mydialog = new JTicketsBagMergeList((Dialog) window, true);
        } 
        
        mydialog.initComponents();
        
        mydialog.jScrollPane1.getVerticalScrollBar().setPreferredSize(new Dimension(35, 35));
        mydialog.jScrollPane1.getHorizontalScrollBar().setPreferredSize(new Dimension(25, 25));

        
        return mydialog;
    }
    
    private static Window getWindow(Component parent) {
        if (parent == null) {
            return new JFrame();
        } else if (parent instanceof Frame || parent instanceof Dialog) {
            return (Window) parent;
        } else {
            return getWindow(parent.getParent());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        m_jtickets = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        m_jButtonMerge1 = new javax.swing.JButton();
        m_jButtonCancel1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();

        setTitle("Merge Tickets");
        setPreferredSize(new java.awt.Dimension(400, 350));

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel2.setMaximumSize(new java.awt.Dimension(600, 400));
        jPanel2.setLayout(new java.awt.BorderLayout());

        m_jtickets.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        m_jtickets.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        m_jtickets.setLayout(new java.awt.GridLayout(0, 1, 5, 5));
        jPanel2.add(m_jtickets, java.awt.BorderLayout.NORTH);

        jScrollPane1.setViewportView(jPanel2);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        jPanel3.add(jPanel4);

        m_jButtonMerge1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        m_jButtonMerge1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/ok.png"))); // NOI18N
        m_jButtonMerge1.setText("Merge");
        m_jButtonMerge1.setFocusPainted(false);
        m_jButtonMerge1.setFocusable(false);
        m_jButtonMerge1.setMargin(new java.awt.Insets(8, 16, 8, 16));
        m_jButtonMerge1.setRequestFocusEnabled(false);
        m_jButtonMerge1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jButtonMerge1ActionPerformed(evt);
            }
        });
        jPanel3.add(m_jButtonMerge1);

        m_jButtonCancel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        m_jButtonCancel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/cancel.png"))); // NOI18N
        m_jButtonCancel1.setText("Exit");
        m_jButtonCancel1.setFocusPainted(false);
        m_jButtonCancel1.setFocusable(false);
        m_jButtonCancel1.setMargin(new java.awt.Insets(8, 16, 8, 16));
        m_jButtonCancel1.setRequestFocusEnabled(false);
        m_jButtonCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jButtonCancel1ActionPerformed(evt);
            }
        });
        jPanel3.add(m_jButtonCancel1);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        jPanel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel5.setMinimumSize(new java.awt.Dimension(33, 33));
        jPanel5.setLayout(new java.awt.BorderLayout(5, 5));

        jTextField1.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel5.add(jTextField1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel5, java.awt.BorderLayout.PAGE_START);

        setSize(new java.awt.Dimension(416, 389));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void m_jButtonCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jButtonCancel1ActionPerformed
        dispose();
    }//GEN-LAST:event_m_jButtonCancel1ActionPerformed

    private void m_jButtonMerge1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jButtonMerge1ActionPerformed
        TicketInfo tempTicket = null;
        
        if(m_sPrimaryTicket != null && m_sSecondaryTicket != null) {
            tempTicket = null;
            
            try {
                TicketInfo t1 = dlReceipts.getSharedTicket(m_sPrimaryTicket);
                TicketInfo t2 = dlReceipts.getSharedTicket(m_sSecondaryTicket);
                int iOldPickupId = t1.getPickupId();
                
                tempTicket = t1.copyTicket();
                
                for(TicketLineInfo line : t2.getLines()) {
                    tempTicket.addLine(line);
                }
                
                dlReceipts.deleteSharedTicket(m_sPrimaryTicket);
                dlReceipts.deleteSharedTicket(m_sSecondaryTicket);
                
                dlReceipts.insertSharedTicket(tempTicket.getId(), tempTicket, tempTicket.getPickupId());
                m_sDialogTicket = tempTicket.getId();
                tempTicket.setPickupId(iOldPickupId);
            }
            catch(BasicException e) {
                new MessageInf(e).show(this);
            }
        }
        
        jTextField1.setText("");
        JTicketsBagMergeList.this.setVisible(false);
    }//GEN-LAST:event_m_jButtonMerge1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if(jTextField1.getText().length() < 1) {
            m_jtickets.removeAll();
            for(SharedTicketInfo aticket : this.ticketList) {
                m_jtickets.add(new JButtonTicket(aticket));
            }
            m_jtickets.updateUI();
        }
        else
            updateTicketsList();
    }//GEN-LAST:event_jTextField1KeyReleased

    private class JButtonTicket extends JButton {
        
        private final SharedTicketInfo m_Ticket;
        
        public JButtonTicket(SharedTicketInfo ticket){
            
            super();
            
            m_Ticket = ticket;
            setFocusPainted(false);
            setFocusable(false);
            setRequestFocusEnabled(false);
            setMargin(new Insets(8, 14, 8, 14));
            setFont(new java.awt.Font ("Dialog", 0, 14));
            setBackground(new java.awt.Color (220, 220, 220));
            addActionListener(new ActionListenerImpl());
            
            //setText(ticket.getName());
            setText(ticket.getName());
            
        }

        private class ActionListenerImpl implements ActionListener {

            public ActionListenerImpl() {
            }

            @Override
            public void actionPerformed(ActionEvent evt) {
                // Selecciono el ticket
                
                if(m_sPrimaryTicket != null)
                    m_sSecondaryTicket = m_Ticket.getId();
                else
                    m_sPrimaryTicket = m_Ticket.getId();

                // y oculto la ventana
                //JTicketsBagMergeList.this.setVisible(false);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton m_jButtonCancel1;
    private javax.swing.JButton m_jButtonMerge1;
    private javax.swing.JPanel m_jtickets;
    // End of variables declaration//GEN-END:variables
}
